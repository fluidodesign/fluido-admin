{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte",
    "../src/components/FetchProgress.svelte",
    "../src/components/Input.svelte",
    "../src/components/SnackMessage.svelte",
    "../src/components/Modal.svelte",
    "../src/routes/_DefaultBar.svelte",
    "../src/components/IconButton.svelte",
    "../src/components/Button.svelte",
    "../src/components/PopMenu.svelte",
    "../src/routes/Projects.svelte",
    "../src/routes/Templates.svelte",
    "../src/routes/Auth.svelte",
    "../src/routes/_ProjectsCard.svelte",
    "../src/components/AddProjectModal.svelte",
    "../src/components/ProjectCard.svelte",
    "../src/routes/_TemplatesCard.svelte",
    "../src/routes/_TemplatesBar.svelte",
    "../src/components/AddTemplateModal.svelte",
    "../src/components/DragList.svelte",
    "../src/components/ListItem.svelte",
    "../src/components/SwipeView.svelte",
    "../src/components/AddModal.svelte",
    "../src/components/ModalRemoveProject.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { onMount } from 'svelte'\n  import { fade } from 'svelte/transition'\n\n  // Routes\n  import routesConfig, { getPage, getAppBarContent } from './routes'\n\n  // Stores\n  import { snackList } from './stores/main'\n  import { urlData } from './stores/router'\n\n  // Components\n  import FetchProgress from './components/FetchProgress.svelte'\n  import Input from './components/Input.svelte'\n  import SnackMessage from './components/SnackMessage.svelte'\n  import ModalContainer from './components/Modal.svelte'\n  import DefaultBar from './routes/_DefaultBar.svelte'\n\n  // API\n  import { getUserAsync } from './helpers/auth'\n\n  export let mainRouter\n  routesConfig(mainRouter)\n\n  let bar\n  let component\n  let searchTitle\n  let modal\n  let hideSearch\n\n  $: {\n    const ab = getAppBarContent($urlData.segment)\n    bar = ab.bar || null\n    component = ab.component || null\n    hideSearch = ab.hideSearch || false\n    searchTitle = ab.searchTitle || ''\n    modal = ab.modal || null\n  }\n\n  onMount(() => {\n    getUserAsync()\n      .then(user => user.getIdToken())\n      .then(token => {\n        setInitLoading(false)\n        if ($urlData.segment === '' || $urlData.segment === 'auth') {\n          $urlData.segment = 'projects'\n        }\n      })\n      .catch(err => {\n        setInitLoading(false)\n        switch (err.message) {\n          case 'user_not_logged':\n            if ($urlData.segment !== '' || $urlData.segment !== 'auth') {\n              snackList.add({ text: 'Não esta logado ou não encontrado' })\n              $urlData.segment = 'auth'\n            }\n            break\n          default:\n            console.error(err.message)\n        }\n      })\n  })\n</script>\n\n<style>\n  main {\n    background-color: #fff;\n    position: relative;\n    max-width: 375px;\n    width: 100%;\n    min-height: 100vh;\n    margin: 0;\n  }\n\n  div {\n    box-sizing: border-box;\n  }\n\n  div.header-section {\n    background-color: inherit;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n    height: 248px;\n    z-index: 2000;\n  }\n\n  div.header-section > div.bar {\n    position: relative;\n    /* height: 144px; */\n    height: 128px;\n    width: 100%;\n  }\n\n  div.header-section > div.search {\n    display: flex;\n    flex-direction: column;\n    height: 104px;\n    padding: 24px 16px;\n    width: 100%;\n  }\n\n  div.header-section > div.bar > :global(*) {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n  }\n\n  div.fixed-section {\n    top: 0px;\n    background-color: #fff;\n    width: 100%;\n    padding: 8px 16px;\n    overflow: visible;\n    display: grid;\n    grid-template-columns: 72px 1fr;\n    grid-column-gap: 16px;\n    z-index: 1000;\n  }\n\n  /* div.fixed-section.elevation::before {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    box-shadow: var(--elevation1);\n  } */\n\n  div.fixed-section > .modal,\n  div.fixed-section > .card {\n    position: relative;\n    height: 100px;\n  }\n\n  div.content-section {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-areas: 'child';\n    overflow-x: hidden;\n    padding-bottom: 32px;\n  }\n\n  div.content-section > :global(*) {\n    grid-area: child;\n    overflow: hidden;\n  }\n\n  div.full-float > :global(*) {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100px;\n  }\n</style>\n\n<main>\n  <FetchProgress />\n  <div class=\"header-section\">\n    <div class=\"bar\">\n      {#if typeof bar === 'string'}\n        <DefaultBar title={bar} />\n      {:else}\n        <svelte:component this={bar} />\n      {/if}\n    </div>\n    {#if !hideSearch}\n      <div class=\"search\">\n        <Input label={searchTitle || 'Buscar...'} emphasis />\n      </div>\n    {/if}\n  </div>\n  <div>\n    {#if !hideSearch}\n      <div class=\"fixed-section\">\n        <div class=\"modal\">\n          <svelte:component this={modal} />\n        </div>\n        <div class=\"card full-float\">\n          <svelte:component this={component} />\n        </div>\n      </div>\n    {/if}\n    <div class=\"content-section\">\n      <svelte:component this={getPage($urlData.segment)} />\n    </div>\n  </div>\n  <ModalContainer />\n</main>\n<SnackMessage />\n",
    "<script>\n  import { fetchCount } from '../stores/main'\n\n  $: loading = $fetchCount > 0\n</script>\n\n<style>\n  div.progress {\n    position: fixed;\n    top: 0;\n    right: 0;\n    left: 0;\n    background-color: #a9a9a9;\n    z-index: 5000;\n    height: 0;\n    opacity: 0;\n    transition: 0.5s opacity, 0.5s height;\n  }\n\n  div.progress.loading {\n    height: 2px;\n    opacity: 1;\n  }\n\n  div.progress > div {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    background-color: #121212;\n    animation: loading-bar-left 1s ease-in infinite alternate,\n      loading-bar-right 1s ease-out infinite alternate;\n  }\n\n  @keyframes loading-bar-left {\n    0% {\n      left: 0;\n    }\n    100% {\n      left: 90%;\n    }\n  }\n  @keyframes loading-bar-right {\n    0% {\n      right: 90%;\n    }\n    100% {\n      right: 0;\n    }\n  }\n</style>\n\n<div class=\"progress\" class:loading>\n  <div />\n</div>\n",
    "<script>\n  import { fade } from 'svelte/transition'\n  import TinyColor from '@ctrl/tinycolor'\n\n  export let label = ''\n  export let color = '#ffffff'\n  export let digest = null\n  export let emphasis = false\n\n  let primaryColor = '#ffffff'\n  let secondaryColor = 'var(--color-black)'\n\n  $: {\n    let ptc = new TinyColor(color)\n    if (ptc.isValid) {\n      ptc.setAlpha(1)\n      primaryColor = ptc.toHexString()\n    } else {\n      primaryColor = '#ffffff'\n    }\n    let stc = new TinyColor(primaryColor)\n    if (stc.isDark()) {\n      secondaryColor = '#ffffff'\n    } else {\n      secondaryColor = 'var(--color-black)'\n    }\n  }\n\n  export let node = null\n  export let value = ''\n\n  $: if (typeof digest === 'function') value = digest(value)\n</script>\n\n<style>\n  input {\n    height: 48px;\n    padding: 0 16px;\n    border: 2px solid rgba(0, 0, 0, 0.3);\n    border-radius: 26px;\n    outline: none;\n    transition: border 0.5s, border-radius 0.5s;\n    background-color: var(--input-primary-color, #fff);\n    color: var(--input-secondary-color, var(--color-black));\n  }\n\n  input.emphasis {\n    height: 56px;\n    border-radius: 30px;\n  }\n\n  input:focus {\n    border-radius: 0;\n    border: 2px solid rgba(0, 0, 0, 0.7);\n  }\n</style>\n\n<input\n  on:input\n  on:blur\n  on:change\n  on:focus\n  on:keypress\n  trasition:fade\n  style=\"--input-primary-color: {primaryColor}; --input-secondary-color: {secondaryColor}\"\n  bind:this={node}\n  bind:value\n  placeholder={label}\n  class=\"type-subtitle2\"\n  class:emphasis />\n",
    "<script>\n  import TinyColor from '@ctrl/tinycolor'\n  import { onMount } from 'svelte'\n  import { fly } from 'svelte/transition'\n\n  import { currentProject } from '../stores/project'\n  import { snackList } from '../stores/main'\n\n  $: primaryColor = $currentProject\n    ? $currentProject.primaryColor || '#ffffff'\n    : '#fff'\n  $: secondaryColor = $currentProject\n    ? $currentProject.secondaryColor || '#121212'\n    : '#121212'\n  $: light = new TinyColor(primaryColor).isLight()\n\n  $: list = $snackList.slice(-4)\n</script>\n\n<style>\n  div.snack-list {\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    width: 360px;\n    min-height: 56px;\n    padding: 4px;\n    z-index: 10000;\n  }\n\n  div.snack-list:empty {\n    display: none;\n  }\n\n  div.snack-list > div.snack {\n    margin: 4px;\n    width: 344px;\n    min-height: 56px;\n    background-color: var(--snack-primary-color, #fff);\n    color: var(--snack-secondary-color, var(--color-black));\n    box-sizing: border-box;\n  }\n\n  div.snack-list.light > div.snack {\n    border: 2px solid currentColor;\n  }\n</style>\n\n<div\n  class=\"snack-list noselect\"\n  style=\"--snack-primary-color: {primaryColor}; --snack-secondary-color: {secondaryColor};\"\n  class:light>\n  {#each list as snack (snack.__id)}\n    <div transition:fly={{ x: -330, duration: 300 }} class=\"snack\">\n      {snack.text}\n    </div>\n  {/each}\n</div>\n",
    "<script>\n  import { fade } from 'svelte/transition'\n\n  // Components\n  import { preventEvent } from './utils'\n  import IconButton from './IconButton.svelte'\n  import Button from './Button.svelte'\n\n  // Stores\n  import { modalDataList } from '../stores/main'\n\n  function exitModal(modal) {\n    modalDataList.remove(modal.__id)\n  }\n</script>\n\n<style>\n  div.modal-wrapper {\n    position: fixed;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    background: rgba(0, 0, 0, 0.7);\n    z-index: 5000;\n  }\n\n  div.modal {\n    position: absolute;\n    top: 64px;\n    left: 50%;\n    transform: translateX(-50%);\n    min-width: 352px;\n    max-width: 720px;\n    background-color: #fff;\n    border: 2px solid var(--color-black);\n  }\n\n  div.modal-title {\n    display: grid;\n    grid-template-columns: 1fr 48px;\n    align-items: center;\n    height: 48px;\n  }\n\n  h3 {\n    margin-left: 16px;\n  }\n\n  div.modal-content {\n    padding: 16px;\n  }\n\n  div.modal-actions {\n    padding: 16px;\n    display: flex;\n    flex-wrap: nowrap;\n    justify-content: flex-end;\n  }\n\n  div.modal-actions > :global(*) {\n    margin-left: 8px;\n  }\n</style>\n\n{#each $modalDataList as modal, index}\n  <div\n    class=\"modal-wrapper\"\n    on:click={() => exitModal(modal)}\n    transition:fade={{ duration: 200 }}>\n    <div class=\"modal\" on:click={preventEvent}>\n      <div class=\"modal-title\">\n        <h3 class=\"type-h5\">{modal.title || 'Título'}</h3>\n        <IconButton icon=\"close\" on:click={() => exitModal(modal)} />\n      </div>\n      <div class=\"modal-content type-body\">\n        {#if typeof modal.content === 'string'}\n          {modal.content}\n        {:else}\n          <svelte:component this={modal.content} />\n        {/if}\n      </div>\n      <div class=\"modal-actions\">\n        <Button on:click={() => exitModal(modal)}>Cancelar</Button>\n        {#each modal.actions as button}\n          <Button\n            style=\"order: {button.order || 0}\"\n            on:click={() => {\n              if (button.callback) {\n                if (button.callback(index)) exitModal(modal)\n              } else {\n                exitModal(modal)\n              }\n            }}>\n            {button.label}\n          </Button>\n        {/each}\n      </div>\n    </div>\n  </div>\n{/each}\n",
    "<script>\n  import { onMount } from 'svelte'\n  import { fade } from 'svelte/transition'\n  import Popper from 'popper.js'\n\n  // Components\n  import IconButton from '../components/IconButton.svelte'\n  import Button from '../components/Button.svelte'\n  import PopMenu from '../components/PopMenu.svelte'\n\n  // Stores\n  import { urlData } from '../stores/router'\n\n  // Helpers\n  import { signOut } from '../helpers/auth'\n\n  export let title\n\n  let button\n  let pop\n  let open = false\n  let self = null\n\n  function toggleMenu() {\n    open = !open\n  }\n\n  const popMenuList = [{ key: 'logout', label: 'Sair' }]\n\n  function popMenuHandler(evt) {\n    const item = evt.detail\n    switch (item.key) {\n      case 'logout':\n        signOut()\n        $urlData.segment = 'auth'\n        break\n    }\n  }\n</script>\n\n<style>\n  div.app-bar {\n    position: relative;\n    display: flex;\n    flex-direction: column-reverse;\n    background-color: #fff;\n  }\n\n  div.logout div.top {\n    display: none;\n  }\n\n  div.top {\n    position: absolute;\n    top: 8px;\n    right: 8px;\n    z-index: 0;\n  }\n\n  h1 {\n    text-align: center;\n    opacity: 0.7;\n  }\n</style>\n\n<div\n  bind:this={self}\n  transition:fade={{ duration: 300 }}\n  class=\"app-bar\"\n  class:logout={$urlData.segment === 'auth'}>\n  <h1 class=\"type-h3\">{title}</h1>\n  <div class=\"top\">\n    <IconButton bind:node={button} icon=\"more_vert\" on:click={toggleMenu} />\n  </div>\n  <PopMenu\n    bind:open\n    container={self}\n    on:click={popMenuHandler}\n    list={popMenuList}\n    anchor={button} />\n</div>\n",
    "<script>\n  import { createEventDispatcher } from 'svelte'\n  import { ripple } from 'fluido-components'\n  import { scale } from 'svelte/transition'\n  import { preventEvent } from './utils'\n\n  export let node = null\n  export let icon = 'add'\n\n  let eventType = null\n\n  const dispatch = createEventDispatcher()\n\n  function clear() {\n    setTimeout(() => {\n      eventType = null\n    }, 1000)\n  }\n\n  function handleClick(evt) {\n    if (!eventType) eventType = 'click'\n    if (eventType !== 'click') return preventEvent(evt)\n\n    dispatch('click', { target: evt.target })\n    clear()\n    return preventEvent(evt)\n  }\n\n  function handleTouch(evt) {\n    if (!eventType) eventType = 'touch'\n    if (eventType !== 'touch') return\n\n    dispatch('click', { target: evt.target })\n    clear()\n  }\n</script>\n\n<style>\n  button {\n    height: 48px;\n    width: 48px;\n    display: grid;\n    justify-content: center;\n    align-items: center;\n    grid-template-columns: 100%;\n    grid-template-rows: 100%;\n    cursor: pointer;\n    background-color: transparent;\n    border: none;\n    border-radius: 1000000px;\n    outline: none;\n    position: relative;\n  }\n\n  button:focus::after,\n  button:active::after,\n  button:hover::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    border-radius: 1000000px;\n    background-color: currentColor;\n    opacity: 0.12;\n  }\n\n  i {\n    grid-column: 1;\n    grid-row: 1;\n    line-height: 100%;\n    text-align: center;\n  }\n</style>\n\n<button\n  use:ripple={{ center: true }}\n  on:click={handleClick}\n  on:touchstart={preventEvent}\n  on:touchend={handleTouch}\n  on:mousedown={preventEvent}\n  bind:this={node}\n  class=\"noselect\">\n  {#each [icon] as ic (ic)}\n    <i transition:scale class=\"material-icons\">{ic}</i>\n  {/each}\n</button>\n",
    "<script>\n  import { createEventDispatcher } from 'svelte'\n  import { scale } from 'svelte/transition'\n  import { ripple } from 'fluido-components'\n  import { preventEvent } from './utils'\n  import TinyColor from '@ctrl/tinycolor'\n\n  export let style = ''\n  export let color = '#ffffff'\n\n  $: primaryColor = new TinyColor(color).isValid ? color : '#ffffff'\n  $: secondaryColor = new TinyColor(primaryColor).isDark()\n    ? '#ffffff'\n    : '#121212'\n\n  export let value = ''\n  export let node = null\n  let eventType = null\n\n  const dispatch = createEventDispatcher()\n\n  function clear() {\n    setTimeout(() => {\n      eventType = null\n    }, 1000)\n  }\n\n  function handleClick(evt) {\n    if (!eventType) eventType = 'click'\n    if (eventType !== 'click') return preventEvent(evt)\n\n    dispatch('click', { target: evt.target })\n    clear()\n    return preventEvent(evt)\n  }\n\n  function handleTouch(evt) {\n    if (!eventType) eventType = 'touch'\n    if (eventType !== 'touch') return\n\n    dispatch('click', { target: evt.target })\n    clear()\n  }\n</script>\n\n<style>\n  button {\n    position: relative;\n    overflow: hidden;\n    height: 40px;\n    padding: 0 16px;\n    border: 2px solid rgba(0, 0, 0, 0.7);\n    border-radius: 1000000px;\n    outline: none;\n    transition: border 0.5s, border-radius 0.5s;\n    background-color: var(--button-primary-color, #ffffff);\n    color: var(--button-secondary-color, var(--color-black));\n  }\n\n  button:focus::after,\n  button:active::after,\n  button:hover::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    border-radius: 1000000px;\n    background-color: currentColor;\n    opacity: 0.12;\n  }\n</style>\n\n<button\n  bind:this={node}\n  use:ripple\n  on:click={handleClick}\n  on:touchstart={preventEvent}\n  on:touchend={handleTouch}\n  trasition:scale\n  style={`--button-primary-color: ${primaryColor};\n  --button-secondary-color: ${secondaryColor};\n  ${style}`}\n  class=\"type-button noselect\">\n  <slot />\n</button>\n",
    "<script>\n  import { onMount, onDestroy, createEventDispatcher } from 'svelte'\n  import Popper from 'popper.js'\n  import TinyColor from '@ctrl/tinycolor'\n  import { preventEvent } from './utils'\n\n  // Stores\n  import { currentProject } from '../stores/project'\n\n  $: primaryColor = $currentProject\n    ? $currentProject.primaryColor || '#ffffff'\n    : '#ffffff'\n  $: secondaryColor = $currentProject\n    ? $currentProject.secondaryColor || '#121212'\n    : '#121212'\n  $: light = new TinyColor(primaryColor).isLight()\n\n  const dispatch = createEventDispatcher()\n\n  export let list = []\n  export let anchor = null\n  export let open = true\n  export let container = null\n\n  let self = null\n  let control = null\n\n  $: if (!!anchor && !!self) {\n    if (!!control) control.destroy()\n    let config = { placement: 'bottom' }\n\n    if (!!container)\n      config.modifiers = {\n        flip: {\n          behavior: ['left', 'right'],\n        },\n        preventOverflow: {\n          boundariesElement: container,\n        },\n      }\n    control = new Popper(anchor, self, config)\n  }\n\n  $: if (open && !!control) {\n    control.update()\n  }\n\n  function handleExternalClick(evt) {\n    if (open) open = false\n  }\n\n  onMount(() => {\n    window.addEventListener('mousedown', handleExternalClick)\n  })\n\n  onDestroy(() => {\n    window.removeEventListener('mousedown', handleExternalClick)\n  })\n</script>\n\n<style>\n  ul {\n    list-style: none;\n    padding: 8px 0;\n    margin: 0 -2px 0 16px;\n    background-color: var(--snack-primary-color, #fff);\n    color: var(--snack-secondary-color, var(--color-black));\n    border: 2px solid currentColor;\n    box-sizing: border-box;\n    visibility: collapse;\n    opacity: 0;\n    transition: visibility 0.2s, opacity 0.2s;\n  }\n\n  li {\n    padding: 0;\n    position: relative;\n    min-width: 72px;\n  }\n\n  li:hover > div {\n    background-color: rgba(0, 0, 0, 0.12);\n  }\n\n  li > div {\n    padding: 8px 16px;\n  }\n\n  hr {\n    margin: 8px 0;\n    border: none;\n    border-bottom: 1px solid var(--color-black);\n  }\n\n  ul.open {\n    visibility: visible;\n    opacity: 1;\n  }\n</style>\n\n<ul\n  on:mousedown={preventEvent}\n  on:touchstart{preventEvent}\n  bind:this={self}\n  style=\"--snack-primary-color: {primaryColor}; --snack-secondary-color: {secondaryColor};\"\n  class:light\n  class:open\n  class=\"noselect\">\n  {#each list as item (item.key)}\n    <li\n      on:touchstart={() => dispatch('click', item)}\n      on:click={() => dispatch('click', item)}>\n      <div>{item.label}</div>\n      {#if !!item.divider}\n        <hr />\n      {/if}\n    </li>\n  {/each}\n</ul>\n",
    "<script context=\"module\">\n  import ProjectAppBar from './_ProjectsCard.svelte'\n  import ProjectModal from '../components/AddProjectModal.svelte'\n\n  export let searchTitle = 'Buscar projetos...'\n  export let bar = 'Projetos'\n  export let modal = ProjectModal\n  export let component = ProjectAppBar\n</script>\n\n<script>\n  import { onMount, onDestroy } from 'svelte'\n\n  // Motion\n  import { fade } from 'svelte/transition'\n  import { flip } from 'svelte/animate'\n\n  // Stores\n  import { listProjects } from '../stores/project'\n\n  // Components\n  import ProjectCard from '../components/ProjectCard.svelte'\n</script>\n\n<style>\n  section {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n    grid-gap: 16px;\n    justify-content: flex-start;\n    align-content: flex-start;\n    padding: 16px;\n    overflow-x: hidden;\n  }\n</style>\n\n<section transition:fade={{ duration: 300 }}>\n  {#each $listProjects as proj (proj.slug)}\n    <div>\n      <ProjectCard {...proj} />\n    </div>\n  {/each}\n</section>\n",
    "<script context=\"module\">\n  import TemplatesAppBar from './_TemplatesBar.svelte'\n  import TemplatesAppCard from './_TemplatesCard.svelte'\n  import AddTemplateModal from '../components/AddTemplateModal.svelte'\n\n  export let searchTitle = 'Buscar...'\n  export let bar = TemplatesAppBar\n  export let modal = AddTemplateModal\n  export let component = TemplatesAppCard\n</script>\n\n<script>\n  import { onMount, onDestroy } from 'svelte'\n\n  // Motion\n  import anime from 'animejs'\n  import { fly } from 'svelte/transition'\n\n  // Stores\n  import { urlData } from '../stores/router'\n  import {\n    listTemplates,\n    listFields,\n    recentProjectSlug,\n  } from '../stores/project'\n\n  // Components\n  import SwipeView from '../components/SwipeView.svelte'\n  import DragList from '../components/DragList.svelte'\n  import ListItem from '../components/ListItem.svelte'\n  import IconButton from '../components/IconButton.svelte'\n\n  let index = 0\n\n  $: third = 'field' in $urlData.query\n  $: second = 'template' in $urlData.query && !third\n  $: first = !second && !third\n\n  $: switch (true) {\n    case third:\n      index = 2\n      break\n    case second:\n      index = 1\n      break\n    case first:\n    default:\n      index = 0\n  }\n\n  onMount(() => {\n    window.dispatchEvent(new CustomEvent('reload-template-list'))\n    if ($urlData.query)\n      setTimeout(() => {\n        recentProjectSlug.set($urlData.query.project)\n      }, 500)\n  })\n\n  onDestroy(() => {\n    listTemplates.set([])\n  })\n</script>\n\n<style>\n  section {\n    overflow: hidden;\n    width: 100%;\n  }\n\n  div {\n    padding: 16px 8px;\n  }\n</style>\n\n<section transition:fly={{ x: 300 }}>\n  <SwipeView {index}>\n    <div>\n      <DragList bind:items={$listTemplates} let:item={template} key=\"slug\">\n        <ListItem\n          actions={['delete', 'more_vert']}\n          on:click={() => ($urlData.query.template = template.slug)}>\n          {template.name}\n        </ListItem>\n      </DragList>\n    </div>\n    <div>\n      <DragList bind:items={$listFields} let:item={field} key=\"slug\">\n        <ListItem\n          actions={['delete', 'more_vert']}\n          on:click={() => ($urlData.query.field = field.slug)}>\n          {field.name}\n        </ListItem>\n      </DragList>\n    </div>\n    <div>C</div>\n  </SwipeView>\n</section>\n",
    "<script context=\"module\">\n  export let bar = 'Autenticação'\n  export let hideSearch = true\n</script>\n\n<script>\n  import { onMount } from 'svelte'\n\n  // Stores\n  import { snackList } from '../stores/main'\n  import { urlData } from '../stores/router'\n\n  import { getUserAsync, startFirebaseUI } from '../helpers/auth'\n\n  let message = ''\n\n  onMount(() => {\n    getUserAsync()\n      .then(user => {\n        message = `Já logado com usuário <strong>${user.displayName}</strong>`\n        setTimeout(() => ($urlData.segment = 'projects'), 2000)\n      })\n      .catch(() => {\n        startFirebaseUI('firebase-auth')\n      })\n  })\n</script>\n\n<style>\n  section {\n    overflow: hidden;\n    padding: 16px;\n    text-align: center;\n  }\n</style>\n\n<section>\n  <div id=\"firebase-auth\" />\n  {#if !!message}\n    <h2 class=\"type-subtitle1\">\n      {@html message}\n    </h2>\n    <span class=\"type-caption\">Redirecionando...</span>\n  {/if}\n</section>\n",
    "<script>\n  import { fade } from 'svelte/transition'\n\n  // Stores\n  import { recentProject } from '../stores/project'\n\n  // Components\n  import ProjectCard from '../components/ProjectCard.svelte'\n</script>\n\n<style>\n  div.main {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-gap: 8px 16px;\n    align-items: center;\n    overflow: hidden;\n  }\n\n  span {\n    height: 20px;\n    line-height: 20px;\n  }\n</style>\n\n<div class=\"main\" transition:fade={{ duration: 300 }}>\n  <div>\n    <span class=\"type-caption caption\">Mais recente</span>\n  </div>\n  {#if $recentProject && $recentProject.name}\n    <div>\n      <ProjectCard {...$recentProject} />\n    </div>\n  {/if}\n</div>\n",
    "<script>\n  // Components\n  import Input from './Input.svelte'\n  import AddModal from './AddModal.svelte'\n  import Button from './Button.svelte'\n\n  // Stores\n  import { urlData } from '../stores/router'\n\n  // API\n  import { addProject } from '../api/project'\n\n  let primaryColor = '#ffffff'\n  let secondaryColor = '#000000'\n  let name = ''\n\n  let focusName = false\n  let close\n\n  function clear() {\n    primaryColor = '#ffffff'\n    secondaryColor = '#000000'\n    name = ''\n  }\n\n  let inputNode\n\n  function callOpen({ detail }) {\n    if (detail && inputNode) {\n      inputNode.focus()\n      inputNode.select()\n    }\n    if (!detail) clear()\n  }\n\n  function saveProject() {\n    let toSend = {\n      name,\n      primaryColor,\n      secondaryColor,\n    }\n    if (close) close()\n    setTimeout(() => {\n      addProject(toSend)\n        .then(project => {\n          clear()\n          urlData.set({\n            segment: 'templates',\n            query: { project: project.slug },\n          })\n        })\n        .catch(err => console.error('ERROR', err))\n    }, 500)\n  }\n</script>\n\n<style>\n  div.project-form {\n    display: grid;\n    padding: 8px;\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n    grid-gap: 8px;\n    justify-content: center;\n    align-content: flex-start;\n  }\n\n  div.project-form .fullWidth {\n    grid-column-start: 1;\n    grid-column-end: 3;\n    display: flex;\n    flex-direction: column;\n  }\n\n  div.project-actions {\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    justify-content: stretch;\n    padding: 16px 32px;\n  }\n</style>\n\n<AddModal title=\"Novo Projeto\" on:open={callOpen} bind:close>\n  <div class=\"project-form\">\n    <div class=\"fullWidth\">\n      <Input\n        label=\"Nome do Projeto\"\n        bind:node={inputNode}\n        bind:value={name}\n        on:input={() => (focusName = true)}\n        on:blur={() => (focusName = false)} />\n    </div>\n    <Input bind:value={primaryColor} color={primaryColor} />\n    <Input bind:value={secondaryColor} color={secondaryColor} />\n  </div>\n  <div class=\"project-actions\">\n    <Button on:click={saveProject}>criar projeto</Button>\n  </div>\n</AddModal>\n",
    "<script>\n  import { urlData } from '../stores/router'\n\n  export let name = 'Exemplo de Projeto'\n  export let slug = ''\n  export let primaryColor = '#ffffff'\n  export let secondaryColor = '#121212'\n  export let link = '#'\n  export let properties = {}\n  export let lastUpdate = null\n  export let created = null\n\n  $: initials = name\n    .split(/ +/)\n    .map(e => e[0].toUpperCase())\n    .join('')\n\n  function handleClick() {\n    if (slug) {\n      urlData.set({\n        segment: 'templates',\n        query: { project: slug },\n      })\n    }\n  }\n</script>\n\n<style>\n  div {\n    background-color: var(--card-primary-color, #fff);\n    height: 72px;\n    padding: 8px;\n    box-sizing: border-box;\n    display: grid;\n    grid-template-areas:\n      'initials icon'\n      'name name';\n    grid-template-columns: 1fr 24px;\n    cursor: pointer;\n  }\n\n  h4 {\n    grid-area: name;\n    color: var(--card-secondary-color, var(--color-black));\n  }\n\n  span {\n    grid-area: initial;\n    color: var(--card-secondary-color, var(--color-black));\n  }\n\n  a {\n    grid-area: icon;\n    color: var(--card-secondary-color, #fff);\n    border-radius: 1000000px;\n    height: 24px;\n    width: 24px;\n  }\n\n  a > * {\n    color: inherit;\n  }\n</style>\n\n<div\n  on:click={handleClick}\n  style=\"--card-primary-color: {primaryColor}; --card-secondary-color: {secondaryColor}\">\n  <h4 class=\"type-overline\">{name}</h4>\n  <span class=\"type-h5\">{initials}</span>\n  <a href={link}>\n    <i class=\"material-icons\">open_in_new</i>\n  </a>\n</div>\n",
    "<script>\n  import { fly } from 'svelte/transition'\n</script>\n\n<style>\n  div.main {\n    overflow: hidden;\n  }\n</style>\n\n<div class=\"main\">\n  <div transition:fly={{ x: 300 }}>AAA</div>\n</div>\n",
    "<script>\n  import { fly } from 'svelte/transition'\n  import { ripple } from 'fluido-components'\n\n  // Stores\n  import { urlData } from '../stores/router'\n  import {\n    currentProject,\n    currentTemplate,\n    currentField,\n  } from '../stores/project'\n  import { modalDataList } from '../stores/main'\n\n  // Components\n  import { crossfadeSend, crossfadeReceive } from '../components/utils'\n  import ModalRemoveProject, * as ModalRemoveProjectData from '../components/ModalRemoveProject.svelte'\n  import IconButton from '../components/IconButton.svelte'\n  import PopMenu from '../components/PopMenu.svelte'\n\n  let primaryColor = '#ffffff'\n  let secondaryColor = '#121212'\n\n  let self = null\n  let title = ''\n  let backButton = false\n\n  $: {\n    if ('field' in $urlData.query) {\n      title = $currentField ? $currentField.name || '' : ''\n      backButton = true\n    } else if ('template' in $urlData.query) {\n      title = $currentTemplate ? $currentTemplate.name || '' : ''\n      backButton = true\n    } else {\n      title = $currentProject ? $currentProject.name || '' : ''\n      backButton = false\n    }\n  }\n\n  $: {\n    primaryColor = $currentProject.primaryColor\n      ? $currentProject.primaryColor\n      : primaryColor\n    secondaryColor = $currentProject.secondaryColor\n      ? $currentProject.secondaryColor\n      : secondaryColor\n  }\n\n  function callClose() {\n    $urlData.segment = 'projects'\n    $urlData.query = {}\n  }\n\n  function callBack() {\n    if ('field' in $urlData.query) {\n      delete $urlData.query.field\n      $urlData.query = { ...$urlData.query }\n    } else if ('template' in $urlData.query) {\n      delete $urlData.query.template\n      $urlData.query = { ...$urlData.query }\n    }\n  }\n\n  let button\n  let openMenu = false\n\n  const popMenuList = [{ key: 'remove', label: 'Excluir Projeto' }]\n\n  function handleMenuButton() {\n    openMenu = !openMenu\n  }\n\n  function popMenuHandler(evt) {\n    const item = evt.detail\n    switch (item.key) {\n      case 'remove':\n        modalDataList.add({\n          content: ModalRemoveProject,\n          ...ModalRemoveProjectData\n        })\n        break\n    }\n  }\n</script>\n\n<style>\n  div.main {\n    overflow: hidden;\n    height: 100%;\n    width: 100%;\n    background-color: var(--bar-primary-color, #fff);\n    color: var(--bar-secondary-color, var(--color-black));\n    display: grid;\n    grid-template-columns: 100%;\n    grid-template-rows: 64px 64px;\n    box-sizing: border-box;\n  }\n\n  div.main > * {\n    flex: 1 0 auto;\n    box-sizing: border-box;\n  }\n\n  div.main > div.top {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    padding: 0 8px;\n  }\n\n  div.main > div.top > * {\n    flex: 0 0 auto;\n  }\n\n  div.main > div.top > h1 {\n    flex: 0 1 216px;\n    margin-right: auto;\n    margin-left: 8px;\n  }\n\n  ul {\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    padding: 0;\n    margin: 0;\n    width: 100%;\n  }\n\n  li {\n    list-style-type: none;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    position: relative;\n  }\n\n  li > span {\n    display: inline-block;\n    width: 100%;\n    text-align: center;\n    margin: 16px 8px;\n  }\n\n  li > div {\n    width: 100%;\n    height: 0;\n    border-bottom: 2px solid var(--bar-secondary-color, var(--color-black));\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: 0;\n  }\n</style>\n\n<svelte:head>\n  <meta name=\"theme-color\" content={primaryColor} />\n</svelte:head>\n\n<div\n  bind:this={self}\n  transition:fly={{ y: -200, duration: 300 }}\n  style=\"--bar-primary-color: {primaryColor}; --bar-secondary-color: {secondaryColor}\"\n  class=\"main\">\n  <div class=\"top\">\n    <IconButton\n      icon={backButton ? 'arrow_back' : 'close'}\n      on:click={ev => (backButton ? callBack(ev) : callClose(ev))} />\n    <h1 class=\"type-h6\">{title}</h1>\n    <IconButton\n      icon=\"more_vert\"\n      on:click={handleMenuButton}\n      bind:node={button} />\n  </div>\n  <ul>\n    {#each [['templates', 'Modelos'], ['users', 'Usuários']] as tab (tab[0])}\n      <li use:ripple on:click={() => ($urlData.segment = tab[0])}>\n        <span class=\"type-button\">{tab[1]}</span>\n        {#if $urlData.segment === tab[0]}\n          <div\n            out:crossfadeSend={{ key: 'tab_line' }}\n            in:crossfadeReceive={{ key: 'tab_line' }} />\n        {/if}\n      </li>\n    {/each}\n  </ul>\n  <PopMenu\n    bind:open={openMenu}\n    container={self}\n    on:click={popMenuHandler}\n    list={popMenuList}\n    anchor={button} />\n</div>\n",
    "<script>\n  import { urlData } from '../stores/router'\n\n  // Helpers\n  import { slugifyConfigured } from '../helpers'\n\n  // Components\n  import Input from './Input.svelte'\n  import AddModal from './AddModal.svelte'\n  import Button from './Button.svelte'\n\n  // Stores\n  import { listTemplates, listFields } from '../stores/project'\n\n  // API\n  import { addTemplate } from '../api/template'\n\n  let name = ''\n  let slug = ''\n\n  let focusName = false\n  let close\n\n  function clear() {\n    name = ''\n    slug = ''\n  }\n\n  let inputNode\n\n  function callOpen({ detail }) {\n    if (detail && inputNode) {\n      inputNode.focus()\n      inputNode.select()\n    }\n    if (!detail) clear()\n  }\n\n  function slugDigest(text) {\n    let s = slugifyConfigured(text)\n\n    if (text.trim() !== s) {\n      return s\n    }\n    return text\n  }\n\n  $: if (focusName) slug = name\n\n  function saveTemplate() {\n    let toSend = {\n      name,\n      slug,\n      order: $listTemplates.length,\n    }\n    if (close) close()\n    setTimeout(() => {\n      addTemplate(toSend).then(() => {\n        clear()\n      })\n    }, 500)\n  }\n</script>\n\n<style>\n  div.template-form {\n    width: 100%;\n    display: grid;\n    padding: 8px;\n    grid-template-columns: repeat(2, minmax(0, 1fr));\n    grid-gap: 8px;\n    justify-content: center;\n    align-content: flex-start;\n  }\n\n  div.template-form .fullWidth {\n    grid-column-start: 1;\n    grid-column-end: 3;\n    display: flex;\n    flex-direction: column;\n  }\n\n  div.template-actions {\n    display: flex;\n    width: 100%;\n    flex-direction: column;\n    justify-content: stretch;\n    padding: 16px 32px;\n  }\n</style>\n\n<AddModal title=\"Nova Modelo\" on:open={callOpen} bind:close>\n  <div class=\"template-form\">\n    <div class=\"fullWidth\">\n      <Input\n        label=\"Nome da Modelo\"\n        bind:node={inputNode}\n        bind:value={name}\n        on:input={() => (focusName = true)}\n        on:blur={() => (focusName = false)} />\n    </div>\n    <div class=\"fullWidth\">\n      <Input bind:value={slug} digest={slugDigest} label=\"Slug da Modelo\" />\n    </div>\n  </div>\n  <div class=\"template-actions\">\n    <Button on:click={saveTemplate}>criar modelo</Button>\n  </div>\n</AddModal>\n",
    "<script>\n  import { onMount, onDestroy } from 'svelte'\n\n  // Motion\n  import { flip } from 'svelte/animate'\n\n  export let key = 'id'\n  export let items = []\n\n  let itemId = false\n  let itemObj\n  let index\n\n  let height\n  let listNode\n  $: separator = height / items.length\n\n  function getkey(item) {\n    return typeof item === 'object' ? item[key] : item\n  }\n\n  $: if (itemId) {\n    index = items.findIndex(i => getkey(i) === itemId)\n  }\n\n  function handleDragOver(evt) {\n    if (!itemId) return true\n\n    evt.stopPropagation()\n    evt.preventDefault()\n\n    let y = evt.y || (evt.touches && evt.touches[0].clientY)\n    if (Number.isNaN(y)) return true\n    let bound = listNode.getBoundingClientRect()\n    let pos = y - bound.y\n    let calcIndex = ~~(pos / separator)\n\n    if (calcIndex !== index && itemId) {\n      let temp = items[index]\n      items.splice(index, 1)\n      index = calcIndex\n      items.splice(index, 0, temp)\n      items = [...items]\n    }\n    return false\n  }\n\n  function handleFree() {\n    itemId = false\n  }\n\n  onMount(() => {\n    window.addEventListener('mouseup', handleFree)\n    window.addEventListener('touchend', handleFree)\n  })\n\n  onDestroy(() => {\n    window.removeEventListener('mouseup', handleFree)\n    window.removeEventListener('touchend', handleFree)\n  })\n</script>\n\n<style>\n  ul {\n    padding: 0;\n    margin: 0;\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n  }\n\n  li {\n    overflow: hidden;\n    list-style-type: none;\n    min-height: 56px;\n    width: 100%;\n    margin-bottom: 8px;\n    display: flex;\n    flex-wrap: nowrap;\n    z-index: -1;\n    transition: background-color 0.3s;\n  }\n\n  li:hover {\n    background-color: rgba(0, 0, 0, 0.12);\n  }\n\n  li > i {\n    line-height: 56px;\n    height: 56px;\n    width: 48px;\n    margin: 4;\n    text-align: center;\n    cursor: grab;\n  }\n\n  li.draging {\n    cursor: grabbing;\n  }\n\n  div.content {\n    flex: 1 0 auto;\n    min-height: 56px;\n  }\n</style>\n\n<ul\n  on:mouseover={handleDragOver}\n  on:touchmove={handleDragOver}\n  bind:clientHeight={height}\n  bind:this={listNode}\n  class:draging={!!itemId}>\n  {#each items as item (getkey(item))}\n    <li\n      animate:flip={{ duration: 300 }}\n      class:draging={itemId === getkey(item)}>\n      <i\n        class=\"material-icons\"\n        on:mousedown={() => (itemId = getkey(item))}\n        on:touchstart={() => (itemId = getkey(item))}>\n        drag_handle\n      </i>\n      <div class=\"content\">\n        <slot {item} />\n      </div>\n    </li>\n  {/each}\n</ul>\n",
    "<script>\n  import { createEventDispatcher } from 'svelte'\n  import TinyColor from '@ctrl/tinycolor'\n\n  // Motion\n  import { ripple } from 'fluido-components'\n\n  // Stores\n  import { currentProject } from '../stores/project'\n\n  // Components\n  import IconButton from './IconButton.svelte'\n\n  const dispatch = createEventDispatcher()\n\n  export let actions = ['delete']\n  $: primaryColor = $currentProject\n    ? $currentProject.primaryColor || '#ffffff'\n    : '#ffffff'\n  $: secondaryColor = $currentProject\n    ? $currentProject.secondaryColor || '#121212'\n    : '#121212'\n\n  $: light = new TinyColor(primaryColor).isLight()\n</script>\n\n<style>\n  div.list-item {\n    position: relative;\n    display: grid;\n    grid-template-columns: 1fr repeat(var(--actions-limit, 1), 48px);\n    align-items: center;\n    width: 100%;\n    height: 56px;\n    box-sizing: border-box;\n    cursor: pointer;\n    transition: background-color 0.3s;\n    background-color: var(--item-primary-color, #ffffff);\n    color: var(--item-secondary-color, var(--color-black));\n  }\n\n  div.list-item.light {\n    border: 2px solid currentColor;\n  }\n\n  div.hover {\n    position: absolute;\n    background-color: currentColor;\n    opacity: 0;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    transition: opacity 0.3s;\n  }\n\n  div.list-item:hover div.hover {\n    opacity: 0.12;\n  }\n\n  div.icon {\n    position: relative;\n    width: 48px;\n    height: 48px;\n  }\n\n  span.subtitle-text:empty,\n  div.icon:empty {\n    display: none;\n  }\n\n  div.title {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n\n  span.title-text {\n    margin-left: 16px;\n  }\n\n  span.subtitle-text {\n    margin-left: 16px;\n    opacity: 0.7;\n  }\n</style>\n\n<div\n  class=\"list-item\"\n  class:light\n  style=\"--actions-limit:{actions.length};--item-primary-color:{primaryColor};--item-secondary-color:{secondaryColor}\"\n  on:click>\n  <div class=\"hover\" />\n  <div class=\"title\">\n    <div class=\"icon\">\n      <slot name=\"icon\" />\n    </div>\n    <span class=\"title-text type-subtitle1\">\n      <slot>Title</slot>\n    </span>\n    <span class=\"subtitle-text type-caption\">\n      <slot name=\"subtitle\" />\n    </span>\n  </div>\n  {#each actions.slice(0, 2) as ac (ac)}\n    <IconButton\n      icon={ac}\n      on:click={() => dispatch('action-click', { detail: { action: ac } })} />\n  {/each}\n</div>\n",
    "<script>\n  export let smallQuantity = 1\n  export let mediumQuantity = 2\n  export let largeQuantity = 3\n\n  export let smallLimit = 720\n  export let mediumLimit = 1080\n\n  export let index = 0\n\n  let wrapper\n  $: quantity = wrapper ? wrapper.children.length || 1 : 1\n  $: cIndex = index < 0 ? 0 : index > quantity ? quantity : index\n</script>\n\n<style>\n  div.swipe {\n    position: relative;\n    overflow: hidden;\n    width: 100%;\n  }\n\n  div.wrapper {\n    width: calc(100% * var(--quantity, 1));\n    display: grid;\n    grid-template-columns: repeat(var(--quantity, 1), 1fr);\n    grid-template-rows: 1fr;\n    transform: translateX(\n      calc(-100% * calc(var(--index, 0) / var(--quantity, 1)))\n    );\n    transition: transform 0.3s;\n  }\n</style>\n\n<div class=\"swipe\" style=\"--quantity: {quantity}; --index: {cIndex}\">\n  <div class=\"wrapper\" bind:this={wrapper}>\n    <slot />\n  </div>\n</div>\n",
    "<script>\n  import { onMount, onDestroy, createEventDispatcher } from 'svelte'\n  import { preventEvent } from './utils'\n\n  // Motion\n  import { ripple } from 'fluido-components'\n  import anime from 'animejs'\n\n  export let title\n  export let widthSize = 328\n\n  const dispatch = createEventDispatcher()\n\n  let open = false\n  let started = false\n  let toDispatch = false\n\n  export function close() {\n    started = true\n    open = false\n    toDispatch = true\n  }\n\n  let cardNode\n  let svgNode\n\n  const duration = {\n    duration: 500,\n    easing: 'easeInOutQuint',\n  }\n\n  const cardAnimation = {\n    height: 72,\n    width: 72,\n    borderRadius: 40,\n  }\n\n  function handleOpen() {\n    if (started) return\n    started = true\n    open = !open\n    toDispatch = true\n  }\n\n  function handleExternalClick() {\n    if (!open || started) return\n    started = true\n    open = false\n    toDispatch = true\n  }\n\n  onMount(() => {\n    if (!open) {\n      anime.set(cardNode, cardAnimation)\n    } else {\n      anime.set(svgNode, { rotate: 135 })\n    }\n\n    window.addEventListener('mousedown', handleExternalClick)\n  })\n\n  onDestroy(() => {\n    window.removeEventListener('mousedown', handleExternalClick)\n  })\n\n  $: if (cardNode && svgNode) {\n    if (open && started) {\n      anime({\n        targets: cardNode,\n        ...duration,\n        height: n => [...n.children].reduce((v, e) => v + e.offsetHeight, 0),\n        width: () => widthSize,\n        borderRadius: 0,\n        complete: () => {\n          started = false\n          if (toDispatch) dispatch('open', open)\n          toDispatch = false\n        },\n      })\n      anime({\n        targets: svgNode,\n        ...duration,\n        rotate: 135,\n      })\n    } else if (started) {\n      anime({\n        targets: cardNode,\n        ...duration,\n        ...cardAnimation,\n        complete: () => {\n          started = false\n          if (toDispatch) dispatch('open', open)\n          toDispatch = false\n        },\n      })\n      anime({\n        targets: svgNode,\n        ...duration,\n        rotate: 0,\n      })\n    }\n  }\n</script>\n\n<style>\n  div.main {\n    box-sizing: border-box;\n    position: relative;\n    height: 72px;\n    width: 72px;\n    overflow: visible;\n    z-index: 2000;\n  }\n\n  .svg,\n  svg {\n    position: absolute;\n    top: calc(50% - 34px);\n    left: calc(50% - 34px);\n    width: 68px;\n    height: 68px;\n    border-radius: 1000000px;\n  }\n\n  .card {\n    position: absolute;\n    display: block;\n    box-sizing: border-box;\n    border: 2px solid var(--color-black);\n    background-color: #fff;\n    top: 0;\n    left: 0;\n    overflow: hidden;\n  }\n\n  .card > div {\n    width: 100%;\n  }\n\n  h3 {\n    height: 72px;\n    line-height: 72px;\n    min-width: 328px;\n    text-align: center;\n  }\n\n  div.form {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    padding-bottom: 16px;\n  }\n\n  div.form > * {\n    min-width: 328px;\n  }\n\n  div.form:empty,\n  div.actions:empty {\n    display: none;\n  }\n\n  .text {\n    margin-bottom: 8px;\n    text-align: center;\n    width: 72px;\n    height: 20px;\n    line-height: 20px;\n  }\n\n  fieldset {\n    border: none;\n    padding: 0;\n    margin: 0;\n  }\n</style>\n\n<div class=\"type-button text\">criar</div>\n<div class=\"main\" on:mousedown={preventEvent} on:touchstart={preventEvent}>\n  <div class=\"card\" bind:this={cardNode}>\n    <div>\n      <h3 class=\"type-overline\">{title || 'Card Title'}</h3>\n      <form>\n        <fieldset disabled={!open ? 'disabled' : null}>\n          <div class=\"form\">\n            <slot />\n          </div>\n          <div class=\"actions\">\n            <slot name=\"actions\" />\n          </div>\n        </fieldset>\n      </form>\n    </div>\n  </div>\n  <div\n    use:ripple={{ center: true }}\n    on:click={handleOpen}\n    on:touchstart={handleOpen}\n    class=\"svg\">\n    <svg\n      bind:this={svgNode}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"64\"\n      height=\"64\"\n      viewBox=\"0 0 24 24\">\n      <path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\" />\n      <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n    </svg>\n  </div>\n</div>\n",
    "<script context=\"module\">\n  import { snackList } from '../stores/main'\n  import { urlData } from '../stores/router'\n  import { removeProject } from '../api/project'\n\n  let canRemove = false\n\n  export const title = 'Excluir Projeto'\n  export const actions = [\n    {\n      label: 'Sim',\n      order: -1,\n      callback: () => {\n        if (canRemove) {\n          removeProject(canRemove).then(data => {\n            console.log(data)\n            urlData.set({\n              segment: 'projects',\n            })\n          })\n          return true\n        } else\n          snackList.add({\n            text: 'Campo de confirmação não foi preenchido ou não combina!',\n          })\n      },\n    },\n  ]\n</script>\n\n<script>\n  import { selectTextContent } from './utils'\n  import Input from './Input.svelte'\n\n  // Stores\n  import { currentProject } from '../stores/project'\n\n  let code = ''\n\n  $: if (code === $currentProject.slug) {\n    canRemove = $currentProject.slug\n  } else {\n    canRemove = false\n  }\n</script>\n\n<style>\n  em {\n    color: red;\n  }\n\n  .red {\n    color: red;\n  }\n\n  .green {\n    color: green;\n  }\n\n  div {\n    display: flex;\n    align-items: center;\n  }\n</style>\n\n<p class=\"type-body2\">\n  Se você tem certeza de que quer remover o projeto\n  <em>{$currentProject.name}</em>\n  , redigite o codigo\n  <em\n    on:click={evt => selectTextContent(evt.target)}\n    title=\"click para selecionar\">\n    {$currentProject.slug}\n  </em>\n  na caixa de texto abaixo e confirme.\n</p>\n<p class=\"type-body1\">\n  <b>⚠ ATENÇÃO!</b>\n  a exclusão do projeto é inreversivel! Só confirme se tiver absoluta ceteza!\n</p>\n<div>\n  <Input bind:value={code} label=\"Ex: Bw93feGh42oHhekC\" />\n  {#if !!code && code !== $currentProject.slug}\n    <i class=\"material-icons red\">close</i>\n  {/if}\n  {#if !!code && code === $currentProject.slug}\n    <i class=\"material-icons green\">checked</i>\n  {/if}\n</div>\n"
  ],
  "names": [],
  "mappings": "AAiEE,IAAI,cAAC,CAAC,AACJ,gBAAgB,CAAE,IAAI,CACtB,QAAQ,CAAE,QAAQ,CAClB,SAAS,CAAE,KAAK,CAChB,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,KAAK,CACjB,MAAM,CAAE,CAAC,AACX,CAAC,AAED,GAAG,cAAC,CAAC,AACH,UAAU,CAAE,UAAU,AACxB,CAAC,AAED,GAAG,eAAe,cAAC,CAAC,AAClB,gBAAgB,CAAE,OAAO,CACzB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MAAM,CACnB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,KAAK,CACb,OAAO,CAAE,IAAI,AACf,CAAC,AAED,GAAG,6BAAe,CAAG,GAAG,IAAI,cAAC,CAAC,AAC5B,QAAQ,CAAE,QAAQ,CAElB,MAAM,CAAE,KAAK,CACb,KAAK,CAAE,IAAI,AACb,CAAC,AAED,GAAG,6BAAe,CAAG,GAAG,OAAO,cAAC,CAAC,AAC/B,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,MAAM,CAAE,KAAK,CACb,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,KAAK,CAAE,IAAI,AACb,CAAC,AAED,GAAG,6BAAe,CAAG,GAAG,kBAAI,CAAW,CAAC,AAAE,CAAC,AACzC,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,KAAK,CAAE,CAAC,CACR,MAAM,CAAE,CAAC,CACT,IAAI,CAAE,CAAC,AACT,CAAC,AAED,GAAG,cAAc,cAAC,CAAC,AACjB,GAAG,CAAE,GAAG,CACR,gBAAgB,CAAE,IAAI,CACtB,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,GAAG,CAAC,IAAI,CACjB,QAAQ,CAAE,OAAO,CACjB,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,IAAI,CAAC,GAAG,CAC/B,eAAe,CAAE,IAAI,CACrB,OAAO,CAAE,IAAI,AACf,CAAC,AAaD,GAAG,4BAAc,CAAG,oBAAM,CAC1B,GAAG,4BAAc,CAAG,KAAK,cAAC,CAAC,AACzB,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,KAAK,AACf,CAAC,AAED,GAAG,gBAAgB,cAAC,CAAC,AACnB,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,GAAG,CAC1B,mBAAmB,CAAE,OAAO,CAC5B,UAAU,CAAE,MAAM,CAClB,cAAc,CAAE,IAAI,AACtB,CAAC,AAED,GAAG,8BAAgB,CAAW,CAAC,AAAE,CAAC,AAChC,SAAS,CAAE,KAAK,CAChB,QAAQ,CAAE,MAAM,AAClB,CAAC,AAED,GAAG,yBAAW,CAAW,CAAC,AAAE,CAAC,AAC3B,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,KAAK,AACf,CAAC;ACxJD,GAAG,SAAS,cAAC,CAAC,AACZ,QAAQ,CAAE,KAAK,CACf,GAAG,CAAE,CAAC,CACN,KAAK,CAAE,CAAC,CACR,IAAI,CAAE,CAAC,CACP,gBAAgB,CAAE,OAAO,CACzB,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,AACvC,CAAC,AAED,GAAG,SAAS,QAAQ,cAAC,CAAC,AACpB,MAAM,CAAE,GAAG,CACX,OAAO,CAAE,CAAC,AACZ,CAAC,AAED,GAAG,uBAAS,CAAG,GAAG,cAAC,CAAC,AAClB,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,MAAM,CAAE,CAAC,CACT,gBAAgB,CAAE,OAAO,CACzB,SAAS,CAAE,8BAAgB,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC;MACxD,+BAAiB,CAAC,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,AACpD,CAAC,AAED,WAAW,8BAAiB,CAAC,AAC3B,EAAE,AAAC,CAAC,AACF,IAAI,CAAE,CAAC,AACT,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,IAAI,CAAE,GAAG,AACX,CAAC,AACH,CAAC,AACD,WAAW,+BAAkB,CAAC,AAC5B,EAAE,AAAC,CAAC,AACF,KAAK,CAAE,GAAG,AACZ,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,KAAK,CAAE,CAAC,AACV,CAAC,AACH,CAAC;ACbD,KAAK,cAAC,CAAC,AACL,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,CAAC,CAAC,IAAI,CACf,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CACpC,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,MAAM,CAAC,IAAI,CAAC,CAAC,aAAa,CAAC,IAAI,CAC3C,gBAAgB,CAAE,IAAI,qBAAqB,CAAC,KAAK,CAAC,CAClD,KAAK,CAAE,IAAI,uBAAuB,CAAC,mBAAmB,CAAC,AACzD,CAAC,AAED,KAAK,SAAS,cAAC,CAAC,AACd,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,IAAI,AACrB,CAAC,AAED,mBAAK,MAAM,AAAC,CAAC,AACX,aAAa,CAAE,CAAC,CAChB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AACtC,CAAC;AClCD,GAAG,WAAW,cAAC,CAAC,AACd,QAAQ,CAAE,KAAK,CACf,MAAM,CAAE,CAAC,CACT,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,KAAK,CACZ,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,GAAG,CACZ,OAAO,CAAE,KAAK,AAChB,CAAC,AAED,GAAG,yBAAW,MAAM,AAAC,CAAC,AACpB,OAAO,CAAE,IAAI,AACf,CAAC,AAED,GAAG,yBAAW,CAAG,GAAG,MAAM,cAAC,CAAC,AAC1B,MAAM,CAAE,GAAG,CACX,KAAK,CAAE,KAAK,CACZ,UAAU,CAAE,IAAI,CAChB,gBAAgB,CAAE,IAAI,qBAAqB,CAAC,KAAK,CAAC,CAClD,KAAK,CAAE,IAAI,uBAAuB,CAAC,mBAAmB,CAAC,CACvD,UAAU,CAAE,UAAU,AACxB,CAAC,AAED,GAAG,WAAW,oBAAM,CAAG,GAAG,MAAM,cAAC,CAAC,AAChC,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,YAAY,AAChC,CAAC;AC5BD,GAAG,cAAc,cAAC,CAAC,AACjB,QAAQ,CAAE,KAAK,CACf,GAAG,CAAE,CAAC,CACN,KAAK,CAAE,CAAC,CACR,MAAM,CAAE,CAAC,CACT,IAAI,CAAE,CAAC,CACP,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAC9B,OAAO,CAAE,IAAI,AACf,CAAC,AAED,GAAG,MAAM,cAAC,CAAC,AACT,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,IAAI,CACT,IAAI,CAAE,GAAG,CACT,SAAS,CAAE,WAAW,IAAI,CAAC,CAC3B,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,KAAK,CAChB,gBAAgB,CAAE,IAAI,CACtB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,aAAa,CAAC,AACtC,CAAC,AAED,GAAG,YAAY,cAAC,CAAC,AACf,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,GAAG,CAAC,IAAI,CAC/B,WAAW,CAAE,MAAM,CACnB,MAAM,CAAE,IAAI,AACd,CAAC,AAED,EAAE,cAAC,CAAC,AACF,WAAW,CAAE,IAAI,AACnB,CAAC,AAED,GAAG,cAAc,cAAC,CAAC,AACjB,OAAO,CAAE,IAAI,AACf,CAAC,AAED,GAAG,cAAc,cAAC,CAAC,AACjB,OAAO,CAAE,IAAI,CACb,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,MAAM,CACjB,eAAe,CAAE,QAAQ,AAC3B,CAAC,AAED,GAAG,4BAAc,CAAW,CAAC,AAAE,CAAC,AAC9B,WAAW,CAAE,GAAG,AAClB,CAAC;ACrBD,GAAG,QAAQ,cAAC,CAAC,AACX,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,cAAc,CAC9B,gBAAgB,CAAE,IAAI,AACxB,CAAC,AAED,GAAG,qBAAO,CAAC,GAAG,IAAI,cAAC,CAAC,AAClB,OAAO,CAAE,IAAI,AACf,CAAC,AAED,GAAG,IAAI,cAAC,CAAC,AACP,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,KAAK,CAAE,GAAG,CACV,OAAO,CAAE,CAAC,AACZ,CAAC,AAED,EAAE,cAAC,CAAC,AACF,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,AACd,CAAC;ACxBD,MAAM,cAAC,CAAC,AACN,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,CACnB,qBAAqB,CAAE,IAAI,CAC3B,kBAAkB,CAAE,IAAI,CACxB,MAAM,CAAE,OAAO,CACf,gBAAgB,CAAE,WAAW,CAC7B,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,SAAS,CACxB,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,QAAQ,AACpB,CAAC,AAED,oBAAM,MAAM,OAAO,CACnB,oBAAM,OAAO,OAAO,CACpB,oBAAM,MAAM,OAAO,AAAC,CAAC,AACnB,OAAO,CAAE,EAAE,CACX,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,KAAK,CAAE,CAAC,CACR,MAAM,CAAE,CAAC,CACT,IAAI,CAAE,CAAC,CACP,aAAa,CAAE,SAAS,CACxB,gBAAgB,CAAE,YAAY,CAC9B,OAAO,CAAE,IAAI,AACf,CAAC,AAED,CAAC,cAAC,CAAC,AACD,WAAW,CAAE,CAAC,CACd,QAAQ,CAAE,CAAC,CACX,WAAW,CAAE,IAAI,CACjB,UAAU,CAAE,MAAM,AACpB,CAAC;AC3BD,MAAM,cAAC,CAAC,AACN,QAAQ,CAAE,QAAQ,CAClB,QAAQ,CAAE,MAAM,CAChB,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,CAAC,CAAC,IAAI,CACf,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CACpC,aAAa,CAAE,SAAS,CACxB,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,MAAM,CAAC,IAAI,CAAC,CAAC,aAAa,CAAC,IAAI,CAC3C,gBAAgB,CAAE,IAAI,sBAAsB,CAAC,QAAQ,CAAC,CACtD,KAAK,CAAE,IAAI,wBAAwB,CAAC,mBAAmB,CAAC,AAC1D,CAAC,AAED,oBAAM,MAAM,OAAO,CACnB,oBAAM,OAAO,OAAO,CACpB,oBAAM,MAAM,OAAO,AAAC,CAAC,AACnB,OAAO,CAAE,EAAE,CACX,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,KAAK,CAAE,CAAC,CACR,MAAM,CAAE,CAAC,CACT,IAAI,CAAE,CAAC,CACP,aAAa,CAAE,SAAS,CACxB,gBAAgB,CAAE,YAAY,CAC9B,OAAO,CAAE,IAAI,AACf,CAAC;ACVD,EAAE,eAAC,CAAC,AACF,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,GAAG,CAAC,CAAC,CACd,MAAM,CAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CACrB,gBAAgB,CAAE,IAAI,qBAAqB,CAAC,KAAK,CAAC,CAClD,KAAK,CAAE,IAAI,uBAAuB,CAAC,mBAAmB,CAAC,CACvD,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,YAAY,CAC9B,UAAU,CAAE,UAAU,CACtB,UAAU,CAAE,QAAQ,CACpB,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,UAAU,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,AAC3C,CAAC,AAED,EAAE,eAAC,CAAC,AACF,OAAO,CAAE,CAAC,CACV,QAAQ,CAAE,QAAQ,CAClB,SAAS,CAAE,IAAI,AACjB,CAAC,AAED,iBAAE,MAAM,CAAG,GAAG,eAAC,CAAC,AACd,gBAAgB,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,AACvC,CAAC,AAED,iBAAE,CAAG,GAAG,eAAC,CAAC,AACR,OAAO,CAAE,GAAG,CAAC,IAAI,AACnB,CAAC,AAED,EAAE,eAAC,CAAC,AACF,MAAM,CAAE,GAAG,CAAC,CAAC,CACb,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,aAAa,CAAC,AAC7C,CAAC,AAED,EAAE,KAAK,eAAC,CAAC,AACP,UAAU,CAAE,OAAO,CACnB,OAAO,CAAE,CAAC,AACZ,CAAC;ACxED,OAAO,eAAC,CAAC,AACP,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,OAAO,QAAQ,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAC3D,QAAQ,CAAE,IAAI,CACd,eAAe,CAAE,UAAU,CAC3B,aAAa,CAAE,UAAU,CACzB,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,MAAM,AACpB,CAAC;AC+BD,OAAO,eAAC,CAAC,AACP,QAAQ,CAAE,MAAM,CAChB,KAAK,CAAE,IAAI,AACb,CAAC,AAED,GAAG,eAAC,CAAC,AACH,OAAO,CAAE,IAAI,CAAC,GAAG,AACnB,CAAC;AC1CD,OAAO,eAAC,CAAC,AACP,QAAQ,CAAE,MAAM,CAChB,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,MAAM,AACpB,CAAC;ACtBD,GAAG,KAAK,cAAC,CAAC,AACR,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,GAAG,CAC1B,QAAQ,CAAE,GAAG,CAAC,IAAI,CAClB,WAAW,CAAE,MAAM,CACnB,QAAQ,CAAE,MAAM,AAClB,CAAC,AAED,IAAI,cAAC,CAAC,AACJ,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,IAAI,AACnB,CAAC;ACmCD,GAAG,aAAa,cAAC,CAAC,AAChB,OAAO,CAAE,IAAI,CACb,OAAO,CAAE,GAAG,CACZ,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAChD,QAAQ,CAAE,GAAG,CACb,eAAe,CAAE,MAAM,CACvB,aAAa,CAAE,UAAU,AAC3B,CAAC,AAED,GAAG,2BAAa,CAAC,UAAU,cAAC,CAAC,AAC3B,iBAAiB,CAAE,CAAC,CACpB,eAAe,CAAE,CAAC,CAClB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,AACxB,CAAC,AAED,GAAG,gBAAgB,cAAC,CAAC,AACnB,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,IAAI,CACX,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,OAAO,CACxB,OAAO,CAAE,IAAI,CAAC,IAAI,AACpB,CAAC;ACnDD,GAAG,eAAC,CAAC,AACH,gBAAgB,CAAE,IAAI,oBAAoB,CAAC,KAAK,CAAC,CACjD,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,GAAG,CACZ,UAAU,CAAE,UAAU,CACtB,OAAO,CAAE,IAAI,CACb,mBAAmB,CACjB,eAAe;MACf,WAAW,CACb,qBAAqB,CAAE,GAAG,CAAC,IAAI,CAC/B,MAAM,CAAE,OAAO,AACjB,CAAC,AAED,EAAE,eAAC,CAAC,AACF,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,IAAI,sBAAsB,CAAC,mBAAmB,CAAC,AACxD,CAAC,AAED,IAAI,eAAC,CAAC,AACJ,SAAS,CAAE,OAAO,CAClB,KAAK,CAAE,IAAI,sBAAsB,CAAC,mBAAmB,CAAC,AACxD,CAAC,AAED,CAAC,eAAC,CAAC,AACD,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,IAAI,sBAAsB,CAAC,KAAK,CAAC,CACxC,aAAa,CAAE,SAAS,CACxB,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,AACb,CAAC,AAED,gBAAC,CAAG,eAAE,CAAC,AACL,KAAK,CAAE,OAAO,AAChB,CAAC;ACxDD,GAAG,KAAK,cAAC,CAAC,AACR,QAAQ,CAAE,MAAM,AAClB,CAAC;AC+ED,GAAG,KAAK,cAAC,CAAC,AACR,QAAQ,CAAE,MAAM,CAChB,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,gBAAgB,CAAE,IAAI,mBAAmB,CAAC,KAAK,CAAC,CAChD,KAAK,CAAE,IAAI,qBAAqB,CAAC,mBAAmB,CAAC,CACrD,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,IAAI,CAC3B,kBAAkB,CAAE,IAAI,CAAC,IAAI,CAC7B,UAAU,CAAE,UAAU,AACxB,CAAC,AAED,GAAG,mBAAK,CAAG,cAAE,CAAC,AACZ,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CACd,UAAU,CAAE,UAAU,AACxB,CAAC,AAED,GAAG,mBAAK,CAAG,GAAG,IAAI,cAAC,CAAC,AAClB,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,UAAU,CAC3B,WAAW,CAAE,MAAM,CACnB,OAAO,CAAE,CAAC,CAAC,GAAG,AAChB,CAAC,AAED,GAAG,mBAAK,CAAG,GAAG,IAAI,CAAG,cAAE,CAAC,AACtB,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,AAChB,CAAC,AAED,GAAG,mBAAK,CAAG,GAAG,IAAI,CAAG,EAAE,cAAC,CAAC,AACvB,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CACf,YAAY,CAAE,IAAI,CAClB,WAAW,CAAE,GAAG,AAClB,CAAC,AAED,EAAE,cAAC,CAAC,AACF,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CACrC,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,IAAI,AACb,CAAC,AAED,EAAE,cAAC,CAAC,AACF,eAAe,CAAE,IAAI,CACrB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,CACnB,MAAM,CAAE,OAAO,CACf,QAAQ,CAAE,QAAQ,AACpB,CAAC,AAED,gBAAE,CAAG,IAAI,cAAC,CAAC,AACT,OAAO,CAAE,YAAY,CACrB,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,IAAI,CAAC,GAAG,AAClB,CAAC,AAED,gBAAE,CAAG,GAAG,cAAC,CAAC,AACR,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,CAAC,CACT,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,qBAAqB,CAAC,mBAAmB,CAAC,CACvE,QAAQ,CAAE,QAAQ,CAClB,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,CAAC,CACR,MAAM,CAAE,CAAC,AACX,CAAC;ACxFD,GAAG,cAAc,eAAC,CAAC,AACjB,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,OAAO,CAAE,GAAG,CACZ,qBAAqB,CAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAChD,QAAQ,CAAE,GAAG,CACb,eAAe,CAAE,MAAM,CACvB,aAAa,CAAE,UAAU,AAC3B,CAAC,AAED,GAAG,6BAAc,CAAC,UAAU,eAAC,CAAC,AAC5B,iBAAiB,CAAE,CAAC,CACpB,eAAe,CAAE,CAAC,CAClB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,AACxB,CAAC,AAED,GAAG,iBAAiB,eAAC,CAAC,AACpB,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,IAAI,CACX,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,OAAO,CACxB,OAAO,CAAE,IAAI,CAAC,IAAI,AACpB,CAAC;ACzBD,EAAE,eAAC,CAAC,AACF,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,CAAC,CACT,qBAAqB,CAAE,IAAI,CAC3B,mBAAmB,CAAE,IAAI,CACzB,kBAAkB,CAAE,IAAI,CACxB,gBAAgB,CAAE,IAAI,CACtB,eAAe,CAAE,IAAI,CACrB,WAAW,CAAE,IAAI,AACnB,CAAC,AAED,EAAE,eAAC,CAAC,AACF,QAAQ,CAAE,MAAM,CAChB,eAAe,CAAE,IAAI,CACrB,UAAU,CAAE,IAAI,CAChB,KAAK,CAAE,IAAI,CACX,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,MAAM,CACjB,OAAO,CAAE,EAAE,CACX,UAAU,CAAE,gBAAgB,CAAC,IAAI,AACnC,CAAC,AAED,iBAAE,MAAM,AAAC,CAAC,AACR,gBAAgB,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,AACvC,CAAC,AAED,iBAAE,CAAG,CAAC,eAAC,CAAC,AACN,WAAW,CAAE,IAAI,CACjB,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,CAAC,CACT,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,IAAI,AACd,CAAC,AAED,EAAE,QAAQ,eAAC,CAAC,AACV,MAAM,CAAE,QAAQ,AAClB,CAAC,AAED,GAAG,QAAQ,eAAC,CAAC,AACX,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CACd,UAAU,CAAE,IAAI,AAClB,CAAC;AC/ED,GAAG,UAAU,cAAC,CAAC,AACb,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,GAAG,CAAC,OAAO,IAAI,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAChE,WAAW,CAAE,MAAM,CACnB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,UAAU,CACtB,MAAM,CAAE,OAAO,CACf,UAAU,CAAE,gBAAgB,CAAC,IAAI,CACjC,gBAAgB,CAAE,IAAI,oBAAoB,CAAC,QAAQ,CAAC,CACpD,KAAK,CAAE,IAAI,sBAAsB,CAAC,mBAAmB,CAAC,AACxD,CAAC,AAED,GAAG,UAAU,MAAM,cAAC,CAAC,AACnB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,YAAY,AAChC,CAAC,AAED,GAAG,MAAM,cAAC,CAAC,AACT,QAAQ,CAAE,QAAQ,CAClB,gBAAgB,CAAE,YAAY,CAC9B,OAAO,CAAE,CAAC,CACV,GAAG,CAAE,CAAC,CACN,KAAK,CAAE,CAAC,CACR,MAAM,CAAE,CAAC,CACT,IAAI,CAAE,CAAC,CACP,UAAU,CAAE,OAAO,CAAC,IAAI,AAC1B,CAAC,AAED,GAAG,wBAAU,MAAM,CAAC,GAAG,MAAM,cAAC,CAAC,AAC7B,OAAO,CAAE,IAAI,AACf,CAAC,AAED,GAAG,KAAK,cAAC,CAAC,AACR,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACd,CAAC,AAED,IAAI,4BAAc,MAAM,CACxB,GAAG,mBAAK,MAAM,AAAC,CAAC,AACd,OAAO,CAAE,IAAI,AACf,CAAC,AAED,GAAG,MAAM,cAAC,CAAC,AACT,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,MAAM,AACzB,CAAC,AAED,IAAI,WAAW,cAAC,CAAC,AACf,WAAW,CAAE,IAAI,AACnB,CAAC,AAED,IAAI,cAAc,cAAC,CAAC,AAClB,WAAW,CAAE,IAAI,CACjB,OAAO,CAAE,GAAG,AACd,CAAC;ACpED,GAAG,MAAM,cAAC,CAAC,AACT,QAAQ,CAAE,QAAQ,CAClB,QAAQ,CAAE,MAAM,CAChB,KAAK,CAAE,IAAI,AACb,CAAC,AAED,GAAG,QAAQ,cAAC,CAAC,AACX,KAAK,CAAE,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC,CACtC,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,OAAO,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CACtD,kBAAkB,CAAE,GAAG,CACvB,SAAS,CAAE;MACT,KAAK,KAAK,CAAC,CAAC,CAAC,KAAK,IAAI,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;KACzD,CACD,UAAU,CAAE,SAAS,CAAC,IAAI,AAC5B,CAAC;AC0ED,GAAG,KAAK,cAAC,CAAC,AACR,UAAU,CAAE,UAAU,CACtB,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,QAAQ,CAAE,OAAO,CACjB,OAAO,CAAE,IAAI,AACf,CAAC,AAED,kBAAI,CACJ,GAAG,cAAC,CAAC,AACH,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CACrB,IAAI,CAAE,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CACtB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,SAAS,AAC1B,CAAC,AAED,KAAK,cAAC,CAAC,AACL,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,KAAK,CACd,UAAU,CAAE,UAAU,CACtB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,aAAa,CAAC,CACpC,gBAAgB,CAAE,IAAI,CACtB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,QAAQ,CAAE,MAAM,AAClB,CAAC,AAED,mBAAK,CAAG,GAAG,cAAC,CAAC,AACX,KAAK,CAAE,IAAI,AACb,CAAC,AAED,EAAE,cAAC,CAAC,AACF,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,KAAK,CAChB,UAAU,CAAE,MAAM,AACpB,CAAC,AAED,GAAG,KAAK,cAAC,CAAC,AACR,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,IAAI,CACf,WAAW,CAAE,MAAM,CACnB,cAAc,CAAE,IAAI,AACtB,CAAC,AAED,GAAG,mBAAK,CAAG,cAAE,CAAC,AACZ,SAAS,CAAE,KAAK,AAClB,CAAC,AAED,GAAG,mBAAK,MAAM,CACd,GAAG,sBAAQ,MAAM,AAAC,CAAC,AACjB,OAAO,CAAE,IAAI,AACf,CAAC,AAED,KAAK,cAAC,CAAC,AACL,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,MAAM,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,WAAW,CAAE,IAAI,AACnB,CAAC,AAED,QAAQ,cAAC,CAAC,AACR,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,CAAC,CACV,MAAM,CAAE,CAAC,AACX,CAAC;AC/HD,EAAE,cAAC,CAAC,AACF,KAAK,CAAE,GAAG,AACZ,CAAC,AAED,IAAI,cAAC,CAAC,AACJ,KAAK,CAAE,GAAG,AACZ,CAAC,AAED,MAAM,cAAC,CAAC,AACN,KAAK,CAAE,KAAK,AACd,CAAC,AAED,GAAG,cAAC,CAAC,AACH,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,AACrB,CAAC"
}